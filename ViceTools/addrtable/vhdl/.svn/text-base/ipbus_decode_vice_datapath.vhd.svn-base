-- Address decode logic for ipbus fabric
-- 
-- This file has been AUTOGENERATED from the address table - do not hand edit
-- 
-- We assume the synthesis tool is clever enough to recognise exclusive conditions
-- in the if statement.
-- 
-- Dave Newbold, February 2011

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use ieee.numeric_std.all;

package ipbus_decode_vice_datapath is

  constant IPBUS_SEL_WIDTH: positive := 5; -- Should be enough for now?
  subtype ipbus_sel_t is std_logic_vector(IPBUS_SEL_WIDTH - 1 downto 0);
  function ipbus_sel_vice_datapath(addr : in std_logic_vector(31 downto 0)) return ipbus_sel_t;

-- START automatically  generated VHDL the Wed Mar  8 18:15:01 2017 
  constant N_SLV_MEM_CNF: integer := 0;
  constant N_SLV_CH0_MEM: integer := 1;
  constant N_SLV_CH1_MEM: integer := 2;
  constant N_SLV_CH2_MEM: integer := 3;
  constant N_SLV_CH3_MEM: integer := 4;
  constant N_SLV_CH4_MEM: integer := 5;
  constant N_SLAVES: integer := 6;
-- END automatically generated VHDL

    
end ipbus_decode_vice_datapath;

package body ipbus_decode_vice_datapath is

  function ipbus_sel_vice_datapath(addr : in std_logic_vector(31 downto 0)) return ipbus_sel_t is
    variable sel: ipbus_sel_t;
  begin

-- START automatically  generated VHDL the Wed Mar  8 18:15:01 2017 
    if    std_match(addr, "-------------00-0-----1---------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_MEM_CNF, IPBUS_SEL_WIDTH)); -- mem_cnf / base 0x00000200 / mask 0x00068200
    elsif std_match(addr, "-------------00-1-----0---------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_CH0_MEM, IPBUS_SEL_WIDTH)); -- ch0_mem / base 0x00008000 / mask 0x00068200
    elsif std_match(addr, "-------------01-0-----0---------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_CH1_MEM, IPBUS_SEL_WIDTH)); -- ch1_mem / base 0x00020000 / mask 0x00068200
    elsif std_match(addr, "-------------01-1-----0---------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_CH2_MEM, IPBUS_SEL_WIDTH)); -- ch2_mem / base 0x00028000 / mask 0x00068200
    elsif std_match(addr, "-------------10-0-----0---------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_CH3_MEM, IPBUS_SEL_WIDTH)); -- ch3_mem / base 0x00040000 / mask 0x00068200
    elsif std_match(addr, "-------------10-1-----0---------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_CH4_MEM, IPBUS_SEL_WIDTH)); -- ch4_mem / base 0x00048000 / mask 0x00068200
-- END automatically generated VHDL

    else
        sel := ipbus_sel_t(to_unsigned(N_SLAVES, IPBUS_SEL_WIDTH));
    end if;

    return sel;

  end function ipbus_sel_vice_datapath;

end ipbus_decode_vice_datapath;

